name: Main test
on: [push]
jobs:
  linter:
    name: linter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Установка Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12
    - name: dependencies
      run: |
        python3.12 -m pip install flake8
    - name: Flake8
      run: python3.12 -m flake8 clinic/
  tests:
    name: tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Установка Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12
    - name: Установка зависимостей
      run: pip install -r requirements.txt
    - name: Ожидание готовности PostgreSQL
      run: |
        for i in {1..10}; do
          pg_isready -h localhost -U test_user && break
          echo "Waiting for PostgreSQL to be ready..."
          sleep 5
        done
      env:
        PGPASSWORD: test_password
    - name: Проверка логов PostgreSQL
      run: docker logs $(docker ps -q --filter ancestor=postgres:latest)
    - name: Настройка базы данных
      run: |
        sudo apt-get install -y postgresql-client
        psql -h localhost -U test_user -d postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'test_db'" | grep -q 1 || psql -h localhost -U test_user -d postgres -c "CREATE DATABASE test_db;"
      env:
        PGPASSWORD: test_password
    - name: Запуск тестов
      run: python manage.py test tests/
      env:
        DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
